; ModuleID = 'fused_nn_softmax'
source_filename = "fused_nn_softmax"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%0 = type { i8*, %1, i32, %2, i64*, i64*, i64 }
%1 = type { i32, i32 }
%2 = type { i8, i8, i16 }

@__tvm_main__ = weak local_unnamed_addr constant [17 x i8] c"fused_nn_softmax\00", align 1

; Function Attrs: nounwind
define dllexport i32 @fused_nn_softmax(i8* noalias nocapture readonly, i8* noalias nocapture readnone, i32) local_unnamed_addr #0 !dbg !5 {
entry:
  call void @llvm.dbg.value(metadata i8* %0, metadata !12, metadata !DIExpression()), !dbg !15
  call void @llvm.dbg.value(metadata i8* %1, metadata !13, metadata !DIExpression()), !dbg !15
  call void @llvm.dbg.value(metadata i32 %2, metadata !14, metadata !DIExpression()), !dbg !15
  %3 = bitcast i8* %0 to %0**, !dbg !15
  %4 = load %0*, %0** %3, align 8, !dbg !15
  %5 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !15
  %6 = bitcast i8* %5 to %0**, !dbg !15
  %7 = load %0*, %0** %6, align 8, !dbg !15
  %8 = getelementptr inbounds %0, %0* %4, i64 0, i32 0, !dbg !15
  %9 = load i8*, i8** %8, align 8, !dbg !15
  %10 = getelementptr inbounds %0, %0* %7, i64 0, i32 0, !dbg !15
  %11 = load i8*, i8** %10, align 8, !dbg !15
  tail call fastcc void @fused_nn_softmax_compute_(i8* %9, i8* %11), !dbg !15
  ret i32 0, !dbg !15
}

; Function Attrs: noinline nounwind
define private fastcc void @fused_nn_softmax_compute_(i8* noalias nocapture readonly, i8* noalias nocapture) unnamed_addr #1 {
entry:
  %2 = bitcast i8* %0 to float*
  %3 = load float, float* %2, align 4, !tbaa !16
  %4 = fcmp olt float %3, 0xC7EFFFFFE0000000
  %5 = select i1 %4, float 0xC7EFFFFFE0000000, float %3
  %6 = getelementptr inbounds i8, i8* %0, i64 4
  %7 = bitcast i8* %6 to float*
  %8 = load float, float* %7, align 4, !tbaa !16
  %9 = fcmp ogt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = getelementptr inbounds i8, i8* %0, i64 8
  %12 = bitcast i8* %11 to float*
  %13 = load float, float* %12, align 4, !tbaa !16
  %14 = fcmp ogt float %10, %13
  %15 = select i1 %14, float %10, float %13
  %16 = getelementptr inbounds i8, i8* %0, i64 12
  %17 = bitcast i8* %16 to float*
  %18 = load float, float* %17, align 4, !tbaa !16
  %19 = fcmp ogt float %15, %18
  %20 = select i1 %19, float %15, float %18
  %21 = getelementptr inbounds i8, i8* %0, i64 16
  %22 = bitcast i8* %21 to float*
  %23 = load float, float* %22, align 4, !tbaa !16
  %24 = fcmp ogt float %20, %23
  %25 = select i1 %24, float %20, float %23
  %26 = getelementptr inbounds i8, i8* %0, i64 20
  %27 = bitcast i8* %26 to float*
  %28 = load float, float* %27, align 4, !tbaa !16
  %29 = fcmp ogt float %25, %28
  %30 = select i1 %29, float %25, float %28
  %31 = getelementptr inbounds i8, i8* %0, i64 24
  %32 = bitcast i8* %31 to float*
  %33 = load float, float* %32, align 4, !tbaa !16
  %34 = fcmp ogt float %30, %33
  %35 = select i1 %34, float %30, float %33
  %36 = getelementptr inbounds i8, i8* %0, i64 28
  %37 = bitcast i8* %36 to float*
  %38 = load float, float* %37, align 4, !tbaa !16
  %39 = fcmp ogt float %35, %38
  %40 = select i1 %39, float %35, float %38
  %41 = getelementptr inbounds i8, i8* %0, i64 32
  %42 = bitcast i8* %41 to float*
  %43 = load float, float* %42, align 4, !tbaa !16
  %44 = fcmp ogt float %40, %43
  %45 = select i1 %44, float %40, float %43
  %46 = getelementptr inbounds i8, i8* %0, i64 36
  %47 = bitcast i8* %46 to float*
  %48 = load float, float* %47, align 4, !tbaa !16
  %49 = fcmp ogt float %45, %48
  %50 = select i1 %49, float %45, float %48
  %51 = getelementptr inbounds i8, i8* %0, i64 40
  %52 = bitcast i8* %51 to float*
  %53 = load float, float* %52, align 4, !tbaa !16
  %54 = fcmp ogt float %50, %53
  %55 = select i1 %54, float %50, float %53
  %56 = getelementptr inbounds i8, i8* %0, i64 44
  %57 = bitcast i8* %56 to float*
  %58 = load float, float* %57, align 4, !tbaa !16
  %59 = fcmp ogt float %55, %58
  %60 = select i1 %59, float %55, float %58
  %61 = getelementptr inbounds i8, i8* %0, i64 48
  %62 = bitcast i8* %61 to float*
  %63 = load float, float* %62, align 4, !tbaa !16
  %64 = fcmp ogt float %60, %63
  %65 = select i1 %64, float %60, float %63
  %66 = getelementptr inbounds i8, i8* %0, i64 52
  %67 = bitcast i8* %66 to float*
  %68 = load float, float* %67, align 4, !tbaa !16
  %69 = fcmp ogt float %65, %68
  %70 = select i1 %69, float %65, float %68
  %71 = getelementptr inbounds i8, i8* %0, i64 56
  %72 = bitcast i8* %71 to float*
  %73 = load float, float* %72, align 4, !tbaa !16
  %74 = fcmp ogt float %70, %73
  %75 = select i1 %74, float %70, float %73
  %76 = getelementptr inbounds i8, i8* %0, i64 60
  %77 = bitcast i8* %76 to float*
  %78 = load float, float* %77, align 4, !tbaa !16
  %79 = fcmp ogt float %75, %78
  %80 = select i1 %79, float %75, float %78
  %81 = getelementptr inbounds i8, i8* %0, i64 64
  %82 = bitcast i8* %81 to float*
  %83 = load float, float* %82, align 4, !tbaa !16
  %84 = fcmp ogt float %80, %83
  %85 = select i1 %84, float %80, float %83
  %86 = getelementptr inbounds i8, i8* %0, i64 68
  %87 = bitcast i8* %86 to float*
  %88 = load float, float* %87, align 4, !tbaa !16
  %89 = fcmp ogt float %85, %88
  %90 = select i1 %89, float %85, float %88
  %91 = getelementptr inbounds i8, i8* %0, i64 72
  %92 = bitcast i8* %91 to float*
  %93 = load float, float* %92, align 4, !tbaa !16
  %94 = fcmp ogt float %90, %93
  %95 = select i1 %94, float %90, float %93
  %96 = getelementptr inbounds i8, i8* %0, i64 76
  %97 = bitcast i8* %96 to float*
  %98 = load float, float* %97, align 4, !tbaa !16
  %99 = fcmp ogt float %95, %98
  %100 = select i1 %99, float %95, float %98
  %101 = getelementptr inbounds i8, i8* %0, i64 80
  %102 = bitcast i8* %101 to float*
  %103 = load float, float* %102, align 4, !tbaa !16
  %104 = fcmp ogt float %100, %103
  %105 = select i1 %104, float %100, float %103
  %106 = getelementptr inbounds i8, i8* %0, i64 84
  %107 = bitcast i8* %106 to float*
  %108 = load float, float* %107, align 4, !tbaa !16
  %109 = fcmp ogt float %105, %108
  %110 = select i1 %109, float %105, float %108
  %111 = getelementptr inbounds i8, i8* %0, i64 88
  %112 = bitcast i8* %111 to float*
  %113 = load float, float* %112, align 4, !tbaa !16
  %114 = fcmp ogt float %110, %113
  %115 = select i1 %114, float %110, float %113
  %116 = getelementptr inbounds i8, i8* %0, i64 92
  %117 = bitcast i8* %116 to float*
  %118 = load float, float* %117, align 4, !tbaa !16
  %119 = fcmp ogt float %115, %118
  %120 = select i1 %119, float %115, float %118
  %121 = getelementptr inbounds i8, i8* %0, i64 96
  %122 = bitcast i8* %121 to float*
  %123 = load float, float* %122, align 4, !tbaa !16
  %124 = fcmp ogt float %120, %123
  %125 = select i1 %124, float %120, float %123
  %126 = getelementptr inbounds i8, i8* %0, i64 100
  %127 = bitcast i8* %126 to float*
  %128 = load float, float* %127, align 4, !tbaa !16
  %129 = fcmp ogt float %125, %128
  %130 = select i1 %129, float %125, float %128
  %131 = getelementptr inbounds i8, i8* %0, i64 104
  %132 = bitcast i8* %131 to float*
  %133 = load float, float* %132, align 4, !tbaa !16
  %134 = fcmp ogt float %130, %133
  %135 = select i1 %134, float %130, float %133
  %136 = getelementptr inbounds i8, i8* %0, i64 108
  %137 = bitcast i8* %136 to float*
  %138 = load float, float* %137, align 4, !tbaa !16
  %139 = fcmp ogt float %135, %138
  %140 = select i1 %139, float %135, float %138
  %141 = getelementptr inbounds i8, i8* %0, i64 112
  %142 = bitcast i8* %141 to float*
  %143 = load float, float* %142, align 4, !tbaa !16
  %144 = fcmp ogt float %140, %143
  %145 = select i1 %144, float %140, float %143
  %146 = getelementptr inbounds i8, i8* %0, i64 116
  %147 = bitcast i8* %146 to float*
  %148 = load float, float* %147, align 4, !tbaa !16
  %149 = fcmp ogt float %145, %148
  %150 = select i1 %149, float %145, float %148
  %151 = getelementptr inbounds i8, i8* %0, i64 120
  %152 = bitcast i8* %151 to float*
  %153 = load float, float* %152, align 4, !tbaa !16
  %154 = fcmp ogt float %150, %153
  %155 = select i1 %154, float %150, float %153
  %156 = getelementptr inbounds i8, i8* %0, i64 124
  %157 = bitcast i8* %156 to float*
  %158 = load float, float* %157, align 4, !tbaa !16
  %159 = fcmp ogt float %155, %158
  %160 = select i1 %159, float %155, float %158
  %161 = getelementptr inbounds i8, i8* %0, i64 128
  %162 = bitcast i8* %161 to float*
  %163 = load float, float* %162, align 4, !tbaa !16
  %164 = fcmp ogt float %160, %163
  %165 = select i1 %164, float %160, float %163
  %166 = getelementptr inbounds i8, i8* %0, i64 132
  %167 = bitcast i8* %166 to float*
  %168 = load float, float* %167, align 4, !tbaa !16
  %169 = fcmp ogt float %165, %168
  %170 = select i1 %169, float %165, float %168
  %171 = getelementptr inbounds i8, i8* %0, i64 136
  %172 = bitcast i8* %171 to float*
  %173 = load float, float* %172, align 4, !tbaa !16
  %174 = fcmp ogt float %170, %173
  %175 = select i1 %174, float %170, float %173
  %176 = getelementptr inbounds i8, i8* %0, i64 140
  %177 = bitcast i8* %176 to float*
  %178 = load float, float* %177, align 4, !tbaa !16
  %179 = fcmp ogt float %175, %178
  %180 = select i1 %179, float %175, float %178
  %181 = getelementptr inbounds i8, i8* %0, i64 144
  %182 = bitcast i8* %181 to float*
  %183 = load float, float* %182, align 4, !tbaa !16
  %184 = fcmp ogt float %180, %183
  %185 = select i1 %184, float %180, float %183
  %186 = getelementptr inbounds i8, i8* %0, i64 148
  %187 = bitcast i8* %186 to float*
  %188 = load float, float* %187, align 4, !tbaa !16
  %189 = fcmp ogt float %185, %188
  %190 = select i1 %189, float %185, float %188
  %191 = getelementptr inbounds i8, i8* %0, i64 152
  %192 = bitcast i8* %191 to float*
  %193 = load float, float* %192, align 4, !tbaa !16
  %194 = fcmp ogt float %190, %193
  %195 = select i1 %194, float %190, float %193
  %196 = getelementptr inbounds i8, i8* %0, i64 156
  %197 = bitcast i8* %196 to float*
  %198 = load float, float* %197, align 4, !tbaa !16
  %199 = fcmp ogt float %195, %198
  %200 = select i1 %199, float %195, float %198
  %201 = getelementptr inbounds i8, i8* %0, i64 160
  %202 = bitcast i8* %201 to float*
  %203 = load float, float* %202, align 4, !tbaa !16
  %204 = fcmp ogt float %200, %203
  %205 = select i1 %204, float %200, float %203
  %206 = getelementptr inbounds i8, i8* %0, i64 164
  %207 = bitcast i8* %206 to float*
  %208 = load float, float* %207, align 4, !tbaa !16
  %209 = fcmp ogt float %205, %208
  %210 = select i1 %209, float %205, float %208
  %211 = getelementptr inbounds i8, i8* %0, i64 168
  %212 = bitcast i8* %211 to float*
  %213 = load float, float* %212, align 4, !tbaa !16
  %214 = fcmp ogt float %210, %213
  %215 = select i1 %214, float %210, float %213
  %216 = getelementptr inbounds i8, i8* %0, i64 172
  %217 = bitcast i8* %216 to float*
  %218 = load float, float* %217, align 4, !tbaa !16
  %219 = fcmp ogt float %215, %218
  %220 = select i1 %219, float %215, float %218
  %221 = getelementptr inbounds i8, i8* %0, i64 176
  %222 = bitcast i8* %221 to float*
  %223 = load float, float* %222, align 4, !tbaa !16
  %224 = fcmp ogt float %220, %223
  %225 = select i1 %224, float %220, float %223
  %226 = getelementptr inbounds i8, i8* %0, i64 180
  %227 = bitcast i8* %226 to float*
  %228 = load float, float* %227, align 4, !tbaa !16
  %229 = fcmp ogt float %225, %228
  %230 = select i1 %229, float %225, float %228
  %231 = getelementptr inbounds i8, i8* %0, i64 184
  %232 = bitcast i8* %231 to float*
  %233 = load float, float* %232, align 4, !tbaa !16
  %234 = fcmp ogt float %230, %233
  %235 = select i1 %234, float %230, float %233
  %236 = getelementptr inbounds i8, i8* %0, i64 188
  %237 = bitcast i8* %236 to float*
  %238 = load float, float* %237, align 4, !tbaa !16
  %239 = fcmp ogt float %235, %238
  %240 = select i1 %239, float %235, float %238
  %241 = getelementptr inbounds i8, i8* %0, i64 192
  %242 = bitcast i8* %241 to float*
  %243 = load float, float* %242, align 4, !tbaa !16
  %244 = fcmp ogt float %240, %243
  %245 = select i1 %244, float %240, float %243
  %246 = getelementptr inbounds i8, i8* %0, i64 196
  %247 = bitcast i8* %246 to float*
  %248 = load float, float* %247, align 4, !tbaa !16
  %249 = fcmp ogt float %245, %248
  %250 = select i1 %249, float %245, float %248
  %251 = getelementptr inbounds i8, i8* %0, i64 200
  %252 = bitcast i8* %251 to float*
  %253 = load float, float* %252, align 4, !tbaa !16
  %254 = fcmp ogt float %250, %253
  %255 = select i1 %254, float %250, float %253
  %256 = getelementptr inbounds i8, i8* %0, i64 204
  %257 = bitcast i8* %256 to float*
  %258 = load float, float* %257, align 4, !tbaa !16
  %259 = fcmp ogt float %255, %258
  %260 = select i1 %259, float %255, float %258
  %261 = getelementptr inbounds i8, i8* %0, i64 208
  %262 = bitcast i8* %261 to float*
  %263 = load float, float* %262, align 4, !tbaa !16
  %264 = fcmp ogt float %260, %263
  %265 = select i1 %264, float %260, float %263
  %266 = getelementptr inbounds i8, i8* %0, i64 212
  %267 = bitcast i8* %266 to float*
  %268 = load float, float* %267, align 4, !tbaa !16
  %269 = fcmp ogt float %265, %268
  %270 = select i1 %269, float %265, float %268
  %271 = getelementptr inbounds i8, i8* %0, i64 216
  %272 = bitcast i8* %271 to float*
  %273 = load float, float* %272, align 4, !tbaa !16
  %274 = fcmp ogt float %270, %273
  %275 = select i1 %274, float %270, float %273
  %276 = getelementptr inbounds i8, i8* %0, i64 220
  %277 = bitcast i8* %276 to float*
  %278 = load float, float* %277, align 4, !tbaa !16
  %279 = fcmp ogt float %275, %278
  %280 = select i1 %279, float %275, float %278
  %281 = getelementptr inbounds i8, i8* %0, i64 224
  %282 = bitcast i8* %281 to float*
  %283 = load float, float* %282, align 4, !tbaa !16
  %284 = fcmp ogt float %280, %283
  %285 = select i1 %284, float %280, float %283
  %286 = getelementptr inbounds i8, i8* %0, i64 228
  %287 = bitcast i8* %286 to float*
  %288 = load float, float* %287, align 4, !tbaa !16
  %289 = fcmp ogt float %285, %288
  %290 = select i1 %289, float %285, float %288
  %291 = getelementptr inbounds i8, i8* %0, i64 232
  %292 = bitcast i8* %291 to float*
  %293 = load float, float* %292, align 4, !tbaa !16
  %294 = fcmp ogt float %290, %293
  %295 = select i1 %294, float %290, float %293
  %296 = getelementptr inbounds i8, i8* %0, i64 236
  %297 = bitcast i8* %296 to float*
  %298 = load float, float* %297, align 4, !tbaa !16
  %299 = fcmp ogt float %295, %298
  %300 = select i1 %299, float %295, float %298
  %301 = getelementptr inbounds i8, i8* %0, i64 240
  %302 = bitcast i8* %301 to float*
  %303 = load float, float* %302, align 4, !tbaa !16
  %304 = fcmp ogt float %300, %303
  %305 = select i1 %304, float %300, float %303
  %306 = getelementptr inbounds i8, i8* %0, i64 244
  %307 = bitcast i8* %306 to float*
  %308 = load float, float* %307, align 4, !tbaa !16
  %309 = fcmp ogt float %305, %308
  %310 = select i1 %309, float %305, float %308
  %311 = getelementptr inbounds i8, i8* %0, i64 248
  %312 = bitcast i8* %311 to float*
  %313 = load float, float* %312, align 4, !tbaa !16
  %314 = fcmp ogt float %310, %313
  %315 = select i1 %314, float %310, float %313
  %316 = getelementptr inbounds i8, i8* %0, i64 252
  %317 = bitcast i8* %316 to float*
  %318 = load float, float* %317, align 4, !tbaa !16
  %319 = fcmp ogt float %315, %318
  %320 = select i1 %319, float %315, float %318
  br label %for_body2

for_body2:                                        ; preds = %for_body2, %entry
  %indvars.iv4 = phi i64 [ 0, %entry ], [ %indvars.iv.next5, %for_body2 ]
  %.0111 = phi float [ 0.000000e+00, %entry ], [ %325, %for_body2 ]
  %321 = getelementptr inbounds float, float* %2, i64 %indvars.iv4
  %322 = load float, float* %321, align 4, !tbaa !16
  %323 = fsub float %322, %320
  %324 = tail call float @llvm.exp.f32(float %323)
  %325 = fadd float %.0111, %324
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond6 = icmp eq i64 %indvars.iv.next5, 64
  br i1 %exitcond6, label %for_end3, label %for_body2, !prof !20

for_end3:                                         ; preds = %for_body2
  %broadcast.splatinsert10 = insertelement <4 x float> undef, float %320, i32 0
  %broadcast.splat11 = shufflevector <4 x float> %broadcast.splatinsert10, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert12 = insertelement <4 x float> undef, float %325, i32 0
  %broadcast.splat13 = shufflevector <4 x float> %broadcast.splatinsert12, <4 x float> undef, <4 x i32> zeroinitializer
  %326 = bitcast i8* %0 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %326, align 4, !tbaa !16
  %327 = fsub <4 x float> %wide.load, %broadcast.splat11
  %328 = call <4 x float> @llvm.exp.v4f32(<4 x float> %327)
  %329 = fdiv <4 x float> %328, %broadcast.splat13
  %330 = bitcast i8* %1 to <4 x float>*
  store <4 x float> %329, <4 x float>* %330, align 4, !tbaa !21
  %331 = getelementptr inbounds i8, i8* %0, i64 16
  %332 = bitcast i8* %331 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %332, align 4, !tbaa !16
  %333 = fsub <4 x float> %wide.load.1, %broadcast.splat11
  %334 = call <4 x float> @llvm.exp.v4f32(<4 x float> %333)
  %335 = fdiv <4 x float> %334, %broadcast.splat13
  %336 = getelementptr inbounds i8, i8* %1, i64 16
  %337 = bitcast i8* %336 to <4 x float>*
  store <4 x float> %335, <4 x float>* %337, align 4, !tbaa !21
  %338 = getelementptr inbounds i8, i8* %0, i64 32
  %339 = bitcast i8* %338 to <4 x float>*
  %wide.load.2 = load <4 x float>, <4 x float>* %339, align 4, !tbaa !16
  %340 = fsub <4 x float> %wide.load.2, %broadcast.splat11
  %341 = call <4 x float> @llvm.exp.v4f32(<4 x float> %340)
  %342 = fdiv <4 x float> %341, %broadcast.splat13
  %343 = getelementptr inbounds i8, i8* %1, i64 32
  %344 = bitcast i8* %343 to <4 x float>*
  store <4 x float> %342, <4 x float>* %344, align 4, !tbaa !21
  %345 = getelementptr inbounds i8, i8* %0, i64 48
  %346 = bitcast i8* %345 to <4 x float>*
  %wide.load.3 = load <4 x float>, <4 x float>* %346, align 4, !tbaa !16
  %347 = fsub <4 x float> %wide.load.3, %broadcast.splat11
  %348 = call <4 x float> @llvm.exp.v4f32(<4 x float> %347)
  %349 = fdiv <4 x float> %348, %broadcast.splat13
  %350 = getelementptr inbounds i8, i8* %1, i64 48
  %351 = bitcast i8* %350 to <4 x float>*
  store <4 x float> %349, <4 x float>* %351, align 4, !tbaa !21
  %352 = getelementptr inbounds i8, i8* %0, i64 64
  %353 = bitcast i8* %352 to <4 x float>*
  %wide.load.4 = load <4 x float>, <4 x float>* %353, align 4, !tbaa !16
  %354 = fsub <4 x float> %wide.load.4, %broadcast.splat11
  %355 = call <4 x float> @llvm.exp.v4f32(<4 x float> %354)
  %356 = fdiv <4 x float> %355, %broadcast.splat13
  %357 = getelementptr inbounds i8, i8* %1, i64 64
  %358 = bitcast i8* %357 to <4 x float>*
  store <4 x float> %356, <4 x float>* %358, align 4, !tbaa !21
  %359 = getelementptr inbounds i8, i8* %0, i64 80
  %360 = bitcast i8* %359 to <4 x float>*
  %wide.load.5 = load <4 x float>, <4 x float>* %360, align 4, !tbaa !16
  %361 = fsub <4 x float> %wide.load.5, %broadcast.splat11
  %362 = call <4 x float> @llvm.exp.v4f32(<4 x float> %361)
  %363 = fdiv <4 x float> %362, %broadcast.splat13
  %364 = getelementptr inbounds i8, i8* %1, i64 80
  %365 = bitcast i8* %364 to <4 x float>*
  store <4 x float> %363, <4 x float>* %365, align 4, !tbaa !21
  %366 = getelementptr inbounds i8, i8* %0, i64 96
  %367 = bitcast i8* %366 to <4 x float>*
  %wide.load.6 = load <4 x float>, <4 x float>* %367, align 4, !tbaa !16
  %368 = fsub <4 x float> %wide.load.6, %broadcast.splat11
  %369 = call <4 x float> @llvm.exp.v4f32(<4 x float> %368)
  %370 = fdiv <4 x float> %369, %broadcast.splat13
  %371 = getelementptr inbounds i8, i8* %1, i64 96
  %372 = bitcast i8* %371 to <4 x float>*
  store <4 x float> %370, <4 x float>* %372, align 4, !tbaa !21
  %373 = getelementptr inbounds i8, i8* %0, i64 112
  %374 = bitcast i8* %373 to <4 x float>*
  %wide.load.7 = load <4 x float>, <4 x float>* %374, align 4, !tbaa !16
  %375 = fsub <4 x float> %wide.load.7, %broadcast.splat11
  %376 = call <4 x float> @llvm.exp.v4f32(<4 x float> %375)
  %377 = fdiv <4 x float> %376, %broadcast.splat13
  %378 = getelementptr inbounds i8, i8* %1, i64 112
  %379 = bitcast i8* %378 to <4 x float>*
  store <4 x float> %377, <4 x float>* %379, align 4, !tbaa !21
  %380 = getelementptr inbounds i8, i8* %0, i64 128
  %381 = bitcast i8* %380 to <4 x float>*
  %wide.load.8 = load <4 x float>, <4 x float>* %381, align 4, !tbaa !16
  %382 = fsub <4 x float> %wide.load.8, %broadcast.splat11
  %383 = call <4 x float> @llvm.exp.v4f32(<4 x float> %382)
  %384 = fdiv <4 x float> %383, %broadcast.splat13
  %385 = getelementptr inbounds i8, i8* %1, i64 128
  %386 = bitcast i8* %385 to <4 x float>*
  store <4 x float> %384, <4 x float>* %386, align 4, !tbaa !21
  %387 = getelementptr inbounds i8, i8* %0, i64 144
  %388 = bitcast i8* %387 to <4 x float>*
  %wide.load.9 = load <4 x float>, <4 x float>* %388, align 4, !tbaa !16
  %389 = fsub <4 x float> %wide.load.9, %broadcast.splat11
  %390 = call <4 x float> @llvm.exp.v4f32(<4 x float> %389)
  %391 = fdiv <4 x float> %390, %broadcast.splat13
  %392 = getelementptr inbounds i8, i8* %1, i64 144
  %393 = bitcast i8* %392 to <4 x float>*
  store <4 x float> %391, <4 x float>* %393, align 4, !tbaa !21
  %394 = getelementptr inbounds i8, i8* %0, i64 160
  %395 = bitcast i8* %394 to <4 x float>*
  %wide.load.10 = load <4 x float>, <4 x float>* %395, align 4, !tbaa !16
  %396 = fsub <4 x float> %wide.load.10, %broadcast.splat11
  %397 = call <4 x float> @llvm.exp.v4f32(<4 x float> %396)
  %398 = fdiv <4 x float> %397, %broadcast.splat13
  %399 = getelementptr inbounds i8, i8* %1, i64 160
  %400 = bitcast i8* %399 to <4 x float>*
  store <4 x float> %398, <4 x float>* %400, align 4, !tbaa !21
  %401 = getelementptr inbounds i8, i8* %0, i64 176
  %402 = bitcast i8* %401 to <4 x float>*
  %wide.load.11 = load <4 x float>, <4 x float>* %402, align 4, !tbaa !16
  %403 = fsub <4 x float> %wide.load.11, %broadcast.splat11
  %404 = call <4 x float> @llvm.exp.v4f32(<4 x float> %403)
  %405 = fdiv <4 x float> %404, %broadcast.splat13
  %406 = getelementptr inbounds i8, i8* %1, i64 176
  %407 = bitcast i8* %406 to <4 x float>*
  store <4 x float> %405, <4 x float>* %407, align 4, !tbaa !21
  %408 = getelementptr inbounds i8, i8* %0, i64 192
  %409 = bitcast i8* %408 to <4 x float>*
  %wide.load.12 = load <4 x float>, <4 x float>* %409, align 4, !tbaa !16
  %410 = fsub <4 x float> %wide.load.12, %broadcast.splat11
  %411 = call <4 x float> @llvm.exp.v4f32(<4 x float> %410)
  %412 = fdiv <4 x float> %411, %broadcast.splat13
  %413 = getelementptr inbounds i8, i8* %1, i64 192
  %414 = bitcast i8* %413 to <4 x float>*
  store <4 x float> %412, <4 x float>* %414, align 4, !tbaa !21
  %415 = getelementptr inbounds i8, i8* %0, i64 208
  %416 = bitcast i8* %415 to <4 x float>*
  %wide.load.13 = load <4 x float>, <4 x float>* %416, align 4, !tbaa !16
  %417 = fsub <4 x float> %wide.load.13, %broadcast.splat11
  %418 = call <4 x float> @llvm.exp.v4f32(<4 x float> %417)
  %419 = fdiv <4 x float> %418, %broadcast.splat13
  %420 = getelementptr inbounds i8, i8* %1, i64 208
  %421 = bitcast i8* %420 to <4 x float>*
  store <4 x float> %419, <4 x float>* %421, align 4, !tbaa !21
  %422 = getelementptr inbounds i8, i8* %0, i64 224
  %423 = bitcast i8* %422 to <4 x float>*
  %wide.load.14 = load <4 x float>, <4 x float>* %423, align 4, !tbaa !16
  %424 = fsub <4 x float> %wide.load.14, %broadcast.splat11
  %425 = call <4 x float> @llvm.exp.v4f32(<4 x float> %424)
  %426 = fdiv <4 x float> %425, %broadcast.splat13
  %427 = getelementptr inbounds i8, i8* %1, i64 224
  %428 = bitcast i8* %427 to <4 x float>*
  store <4 x float> %426, <4 x float>* %428, align 4, !tbaa !21
  %429 = getelementptr inbounds i8, i8* %0, i64 240
  %430 = bitcast i8* %429 to <4 x float>*
  %wide.load.15 = load <4 x float>, <4 x float>* %430, align 4, !tbaa !16
  %431 = fsub <4 x float> %wide.load.15, %broadcast.splat11
  %432 = call <4 x float> @llvm.exp.v4f32(<4 x float> %431)
  %433 = fdiv <4 x float> %432, %broadcast.splat13
  %434 = getelementptr inbounds i8, i8* %1, i64 240
  %435 = bitcast i8* %434 to <4 x float>*
  store <4 x float> %433, <4 x float>* %435, align 4, !tbaa !21
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.exp.f32(float) #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.exp.v4f32(<4 x float>) #2

attributes #0 = { nounwind }
attributes #1 = { noinline nounwind }
attributes #2 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "TVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, dwoId: 1)
!1 = !DIFile(filename: "model.tvm", directory: "/tmp/")
!2 = !{}
!3 = !{i32 2, !"tvm_target", !"llvm"}
!4 = !{i32 4, !"Debug Info Version", i32 3}
!5 = distinct !DISubprogram(name: "fused_nn_softmax", scope: !1, file: !1, type: !6, isLocal: false, isDefinition: true, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !11)
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !9, !9, !8}
!8 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10)
!10 = !DIBasicType(name: "int8", size: 8, encoding: DW_ATE_signed)
!11 = !{!12, !13, !14}
!12 = !DILocalVariable(name: "arg1", arg: 1, scope: !5, file: !1, type: !9)
!13 = !DILocalVariable(name: "arg2", arg: 2, scope: !5, file: !1, type: !9)
!14 = !DILocalVariable(name: "arg3", arg: 3, scope: !5, file: !1, type: !8)
!15 = !DILocation(line: 0, scope: !5)
!16 = !{!17, !17, i64 0}
!17 = !{!"float32", !18, i64 0}
!18 = !{!"0x55cf235552e0", !19, i64 0}
!19 = !{!"tvm-tbaa"}
!20 = !{!"branch_weights", i32 1, i32 1048576}
!21 = !{!22, !22, i64 0}
!22 = !{!"float32", !23, i64 0}
!23 = !{!"0x55cf2354c480", !19, i64 0}
